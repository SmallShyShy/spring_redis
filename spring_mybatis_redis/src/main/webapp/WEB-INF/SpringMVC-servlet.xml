<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <description>Spring MVC Configuration</description>

    <!-- 使用Annotation自动注册Bean,只扫描@Controller -->
    <context:component-scan base-package="com.weguard" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 开启注解 -->
    <mvc:annotation-driven />


    <!--手动配置controller start   需关闭 annotation-driven-->
    <!--&lt;!&ndash; 配置简单的控制器处理适配器 &ndash;&gt;-->
    <!--&lt;!&ndash; SimpleControllerHandlerAdapter：即简单控制器处理适配器， &ndash;&gt;-->
    <!--&lt;!&ndash; HandlerAdapter &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"></bean>-->

    <!--&lt;!&ndash; 所有实现了org.springframework.web.servlet.mvc.Controller 接口的Bean作为Springmvc的后端控制器。 &ndash;&gt;-->
    <!--&lt;!&ndash; HandlerMapping &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />-->
    <!--&lt;!&ndash;根据beanName 找到beanConttroller类&ndash;&gt;-->
    <!--<bean name="/hello" class="com.weguard.controller.BeanController" />-->


    <!--&lt;!&ndash; 可以不加id和name &ndash;&gt;-->
    <!--<bean id="handlerMapping" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">-->
        <!--<property name="mappings">-->
            <!--<props>-->
                <!--<prop key="simple">investorController2</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->
    <!--<bean name="investorController2" class="com.weguard.controller.SimpleUrlController"/>-->
    <!--手动配置controller end-->

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler />

    <!-- 静态资源映射 -->
    <mvc:resources location="/image/" mapping="/image/**"></mvc:resources>
    <mvc:resources location="/css/" mapping="/css/**"></mvc:resources>
    <mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
    <mvc:resources location="/html/" mapping="/html/**"></mvc:resources>

    <!--<bean class="com.weguard.tool.ApiConfig"/>-->
    <!-- <mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/" />
    <mvc:resources mapping="/webjars/**"
        location="classpath:/META-INF/resources/webjars/" /> -->
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>


    <!-- 上传文件拦截，设置最大上传文件大小   10M=10*1024*1024(B)=10485760 bytes -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760" />
    </bean>

</beans>